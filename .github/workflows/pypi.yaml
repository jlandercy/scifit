name: Pypi Workflow

on:
  push:
    branches:
      - main

jobs:

  build-package:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Clean & create folders
        run: |
          rm -rf dist/
          rm -rf .cache/
          mkdir -p .cache/reports
          mkdir -p .cache/media
          mkdir -p .cache/docs

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Python version
        run: |
          python --version

      - name: Install workflow dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade nox build twine pip-tools lxml

      - name: Install package dependencies
        run: |
          pip-compile --extra dev pyproject.toml 
          python -m pip install -r requirements.txt

      - name: Unit tests suite
        env:
          TESTS_PRINT_FIT: 1
          TESTS_PRINT_CHI2: 0
          TESTS_PRINT_K2S: 0
          TESTS_PRINT_LOSS_CONTOUR: 1
          TESTS_PRINT_LOSS_SURFACE: 0
          TESTS_PRINT_LOSS_ITERATIONS: 0
          TESTS_PRINT_REPORT: 0
        run: |
          nox --session tests

      - name: Build package
        run: |
          nox --session package install

      - name: Publish package
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          nox --session publish

      - name: Collect report artifacts
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: .cache/reports

      - name: Collect package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: |
            dist
